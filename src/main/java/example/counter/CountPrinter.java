package example.counter;

import monterey.actor.Actor;
import monterey.actor.ActorContext;
import monterey.actor.MessageContext;
import monterey.actor.trait.Suspendable;

import java.io.Serializable;

/** This Actor is to demonstrate that subscriptions are maintained accross a suspend / resume cycle.
 * 
 * It prints the count generated by the SuspendResumeActor.
 */
public class CountPrinter implements Actor, Suspendable {
    private ActorContext context;

    public void init(ActorContext context) {
        this.context = context;
    }

    public void onMessage(Object payload, MessageContext messageContext) {
        System.out.println("Count: " + (Long) payload);
    }

    public void start(Object state) {
        context.subscribe("count");
    }

    public Serializable suspend() { return null; }
    
    public void resume(Object state) {}
}
